(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{194:function(t,a,e){t.exports=e.p+"assets/img/getBoundingClientRect.7b50c0dd.png"},227:function(t,a,e){"use strict";e.r(a);var v=e(2),_=Object(v.a)({},function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"知识点整理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#知识点整理","aria-hidden":"true"}},[t._v("#")]),t._v(" 知识点整理")]),t._v(" "),v("h2",{attrs:{id:"页面布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#页面布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 页面布局")]),t._v(" "),v("ul",[v("li",[t._v("假设高度已知，请写出三栏布局，其中左栏、右栏宽度各为 300px,中间自适应\n"),v("ul",[v("li",[t._v("浮动布局")]),t._v(" "),v("li",[t._v("定位布局")]),t._v(" "),v("li",[t._v("flexbox 布局")]),t._v(" "),v("li",[t._v("表格布局")]),t._v(" "),v("li",[t._v("网格布局")]),t._v(" "),v("li",[v("router-link",{attrs:{to:"/sundry/DOM/三栏布局.html"}},[t._v("代码实例点这里")])],1)])]),t._v(" "),v("li",[t._v("高度未知，左右固定宽度，中间自适应")]),t._v(" "),v("li",[t._v("上下高度固定，中间自适应")]),t._v(" "),v("li",[t._v("左侧固定，右侧自适应")]),t._v(" "),v("li",[t._v("右侧固定，左侧自适应")]),t._v(" "),v("li",[t._v("左右高度自适应同步")])]),t._v(" "),v("h2",{attrs:{id:"css-盒模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css-盒模型","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS 盒模型")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("基本概念：W3C 标准模型 和 IE 模型")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("margin")]),t._v(","),v("code",[t._v("border")]),t._v(","),v("code",[t._v("padding")]),t._v(","),v("code",[t._v("content")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("区别：")]),t._v(" "),v("ul",[v("li",[t._v("高度与宽度的计算方式不同")]),t._v(" "),v("li",[t._v("W3C 标准盒模型的宽高 === "),v("code",[t._v("content")]),t._v(" 的宽高")]),t._v(" "),v("li",[t._v("IE 盒模型的宽高 === "),v("code",[t._v("content + padding + border")])])])]),t._v(" "),v("li",[v("p",[t._v("CSS 如何设置盒模型")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("box-sizing: content-box")]),t._v(" W3C 标准模型 （浏览器默认）")]),t._v(" "),v("li",[v("code",[t._v("box-sizing: border-box")]),t._v(" IE 模型")])])]),t._v(" "),v("li",[v("p",[t._v("JS 如何设置和获取盒模型对应的宽，高")]),t._v(" "),v("ol",[v("li",[v("code",[t._v("dom.style.width/height")]),t._v(" 只能取到行内样式的，style 标签内定义的样式和 link 外链的样式是取不到的。")]),t._v(" "),v("li",[v("code",[t._v("dom.currentStyle.width/height")]),t._v(" 可以取到页面渲染完成后，DOM 节点上的当前样式，但是只有 IE 浏览器 才支持。")]),t._v(" "),v("li",[v("code",[t._v("window.getComputedStyle(dom).widht/height")]),t._v(" 此种方式与"),v("code",[t._v("currentStyle")]),t._v(" 作用相同，但是兼容更多浏览器，通用性更好。")]),t._v(" "),v("li",[v("code",[t._v("dom.getBoundingClientRect().width/height")]),t._v(" "),v("strong",[t._v("getBoundingClientRect")]),t._v("用于获取某个元素相对于视窗的位置集合。集合中有 top, right, bottom, left 等属性。\n"),v("img",{attrs:{src:e(194),alt:""}})])]),t._v(" "),v("h3",{attrs:{id:"边距重叠解决方案-bfc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#边距重叠解决方案-bfc","aria-hidden":"true"}},[t._v("#")]),t._v(" 边距重叠解决方案(BFC)")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("什么是 BFC？")]),t._v(" "),v("ol",[v("li",[v("code",[t._v("Block Formatting Context")]),t._v(" 块级格式化上下文，W3C 的定义：")])]),t._v(" "),v("blockquote",[v("p",[t._v("浮动元素和绝对定位元素，非块级盒子的块级容器（例如 "),v("code",[t._v("inline-blocks")]),t._v(", "),v("code",[t._v("table-cells")]),t._v(", 和 "),v("code",[t._v("table-captions")]),t._v("），以及"),v("code",[t._v("overflow")]),t._v("值不为"),v("code",[t._v("“visiable”")]),t._v("的块级盒子，都会为他们的内容创建新的 BFC（块级格式上下文）。")])]),t._v(" "),v("ol",[v("li",[t._v("BFC 是一个独立的布局环境，其中的元素布局是不受外界的影响，并且在一个 BFC 中，块盒与行盒（行盒由一行中所有的内联元素所组成）都会垂直的沿着其父元素的边框排列。")]),t._v(" "),v("li",[t._v("BFC 的区域不会与浮动区域的容器重叠")]),t._v(" "),v("li",[t._v("BFC 是一个页面上的独立的容器，外面的元素不会影响 BFC 里的元素，反过来，里面的也不会影响外面的")]),t._v(" "),v("li",[t._v("计算 BFC 高度的时候，浮动元素也会参与计算")])])]),t._v(" "),v("li",[v("p",[t._v("如何创建 BFC ?")]),t._v(" "),v("ol",[v("li",[v("code",[t._v("float")]),t._v(" 的值不为 "),v("code",[t._v("none")])]),t._v(" "),v("li",[v("code",[t._v("position")]),t._v(" 的值不为 "),v("code",[t._v("static")]),t._v("或者 "),v("code",[t._v("relative")])]),t._v(" "),v("li",[v("code",[t._v("display")]),t._v(" 的值为 "),v("code",[t._v("table-cell")]),t._v(","),v("code",[t._v("table-caption")]),t._v(","),v("code",[t._v("inline-block")]),t._v(","),v("code",[t._v("flex")]),t._v(","),v("code",[t._v("inline-flex")]),t._v("中的其中一个")]),t._v(" "),v("li",[v("code",[t._v("overflow")]),t._v(" 的值不为 "),v("code",[t._v("visible")])])])])])])])])]),t._v(" "),v("h2",{attrs:{id:"dom-事件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dom-事件","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM 事件")]),t._v(" "),v("h3",{attrs:{id:"dom-事件的级别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dom-事件的级别","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM 事件的级别")]),t._v(" "),v("ul",[v("li",[t._v("DOM0 "),v("code",[t._v("element.onclick = function(){}")]),t._v(" || "),v("code",[t._v('<a onclick="alert(1)"></a>')]),t._v(" "),v("ol",[v("li",[t._v("直接绑定到 DOM 节点上的")]),t._v(" "),v("li",[t._v("清理 DOM0 事件时，只需要给该事件赋值为 null 。"),v("code",[t._v("element.onclick = null")])]),t._v(" "),v("li",[t._v("同一个元素的同一种事件只能绑定一个函数，否则后面的函数会覆盖之前的函数")]),t._v(" "),v("li",[t._v("不存在兼容性问题")])])]),t._v(" "),v("li",[t._v("DOM2 "),v("code",[t._v("element.addEventListener('click', function(){}, false)")]),t._v(" || IE "),v("code",[t._v("element.attachEvent('onclick', function(){})")]),t._v(" "),v("ol",[v("li",[t._v("dom2 是通过 "),v("code",[t._v("addEventListener")]),t._v(" 绑定事件。")]),t._v(" "),v("li",[t._v("同一个元素可以绑定多个事件，按照绑定顺序执行")]),t._v(" "),v("li",[t._v("清楚事件时，使用 "),v("code",[t._v("removeEventListener")]),t._v("。不能移除匿名添加的函数"),v("br"),t._v(" "),v("code",[t._v('input.removeEventListener( "click" ,a)')])]),t._v(" "),v("li",[v("code",[t._v("addEventListener")]),t._v(" 有三个参数\n"),v("ul",[v("li",[t._v("第一个参数是事件名")]),t._v(" "),v("li",[t._v("第二个参数是事件处理函数")]),t._v(" "),v("li",[t._v("第三个参数是 true 表示在捕获阶段调用，false 表示在冒泡阶段调用。")])])])])]),t._v(" "),v("li",[t._v("DOM3 绑定方式和 DOM2 相同，新增了更多的事件类型。同时也允许自定义事件。")])]),t._v(" "),v("h3",{attrs:{id:"dom-事件模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dom-事件模型","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM 事件模型")]),t._v(" "),v("ul",[v("li",[t._v("捕获\n"),v("ul",[v("li",[t._v("从外层到内层")])])]),t._v(" "),v("li",[t._v("冒泡\n"),v("ul",[v("li",[t._v("从内层到外层")])])])]),t._v(" "),v("h3",{attrs:{id:"dom-事件流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dom-事件流","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM 事件流")]),t._v(" "),v("ul",[v("li",[t._v("事件通过捕获到达目标元素，再通过冒泡上传到 window 对象")]),t._v(" "),v("li",[t._v("DOM 事件捕获的具体流程\n"),v("ul",[v("li",[t._v("捕获："),v("code",[t._v("window")]),t._v(" > "),v("code",[t._v("document")]),t._v(" > "),v("code",[t._v("html")]),t._v(" > "),v("code",[t._v("body")]),t._v(" > "),v("code",[t._v("父级dom节点")]),t._v(" > "),v("code",[t._v("目标元素")])]),t._v(" "),v("li",[t._v("冒泡：与捕获反之 "),v("code",[t._v("目标元素")]),t._v("> ... > "),v("code",[t._v("window")])]),t._v(" "),v("li",[t._v("html 节点 通过 js 的获取方法 "),v("code",[t._v("document.documentElement")])])])]),t._v(" "),v("li",[t._v("Event 对象的常见应用\n"),v("ul",[v("li",[v("code",[t._v("event.preventDefault()")]),t._v(" 阻止默认事件行为")]),t._v(" "),v("li",[v("code",[t._v("event.stopPropagation()")]),t._v(" 阻止冒泡行为")]),t._v(" "),v("li",[v("code",[t._v("event.stopImmediateProgation()")]),t._v("一个元素注册多个事件，阻止除了第一个事件的执行")]),t._v(" "),v("li",[v("code",[t._v("event.currentTarget")]),t._v("当前所绑定的事件")]),t._v(" "),v("li",[v("code",[t._v("event.target")]),t._v("当前被点击的元素")])])])]),t._v(" "),v("h3",{attrs:{id:"自定义事件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#自定义事件","aria-hidden":"true"}},[t._v("#")]),t._v(" 自定义事件")]),t._v(" "),v("ul",[v("li",[v("p",[v("code",[t._v("Event")])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建自定义事件")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" eve "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custome'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册自定义事件")]),t._v("\ndom"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custome'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custome'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发自定义事件")]),t._v("\ndom"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("diapatchEvent")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eve"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),v("li",[v("p",[v("code",[t._v("CustomeEvent")]),t._v(" 可以跟一个 Object ，用来指定自定义参数")])])]),t._v(" "),v("h2",{attrs:{id:"http-协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-协议","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 协议")]),t._v(" "),v("h3",{attrs:{id:"http-协议的主要特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-协议的主要特点","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 协议的主要特点")]),t._v(" "),v("ol",[v("li",[t._v("简单快速\n"),v("ul",[v("li",[t._v("客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有 GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于 HTTP 协议简单，使得 HTTP 服务器的程序规模小，因而通信速度很快。")])])]),t._v(" "),v("li",[t._v("灵活\n"),v("ul",[v("li",[t._v("HTTP 允许传输任意类型的数据对象。正在传输的类型由 Content-Type 加以标记。")])])]),t._v(" "),v("li",[t._v("无连接\n"),v("ul",[v("li",[t._v("无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。")])])]),t._v(" "),v("li",[t._v("无状态\n"),v("ul",[v("li",[t._v("HTTP 协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。")])])]),t._v(" "),v("li",[t._v("支持 B/S 及 C/S 模式。")])]),t._v(" "),v("h3",{attrs:{id:"http-报文的组成部分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-报文的组成部分","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 报文的组成部分")]),t._v(" "),v("ol",[v("li",[t._v("请求报文\n"),v("ul",[v("li",[t._v("请求行\n"),v("ul",[v("li",[t._v("HTTP 方法")]),t._v(" "),v("li",[t._v("资源路径 URL")]),t._v(" "),v("li",[t._v("HTTP 协议版本")])])]),t._v(" "),v("li",[t._v("请求头\n"),v("ul",[v("li",[t._v("包括一些访问的域名、用户代理、Cookie 等信息；")])])]),t._v(" "),v("li",[t._v("空行\n"),v("ul",[v("li",[t._v("代表请求头的结束，请求体的开始")])])]),t._v(" "),v("li",[t._v("请求体\n"),v("ul",[v("li",[t._v("请求数")])])])])]),t._v(" "),v("li",[t._v("响应报文\n"),v("ul",[v("li",[t._v("状态行\n"),v("ul",[v("li",[t._v("HTTP 协议版本")]),t._v(" "),v("li",[t._v("响应状态码")])])]),t._v(" "),v("li",[t._v("响应头\n"),v("ul",[v("li",[t._v("响应时间")]),t._v(" "),v("li",[t._v("数据格式")]),t._v(" "),v("li",[t._v("服务器相关信息")])])]),t._v(" "),v("li",[t._v("空行\n"),v("ul",[v("li",[t._v("响应头的结束，响应体开始")])])]),t._v(" "),v("li",[t._v("响应体\n"),v("ul",[v("li",[t._v("响应的数据")])])])])])]),t._v(" "),v("h3",{attrs:{id:"http-方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-方法","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 方法")]),t._v(" "),v("ul",[v("li",[t._v("GET --- 获取资源")]),t._v(" "),v("li",[t._v("POST --- 传输资源")]),t._v(" "),v("li",[t._v("PUT --- 更新资源")]),t._v(" "),v("li",[t._v("DELETE --- 删除资源")]),t._v(" "),v("li",[t._v("HEAD 获得报文首部")])]),t._v(" "),v("h3",{attrs:{id:"post-和-get-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#post-和-get-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" post 和 get 的区别")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("GET 在浏览器回退时是无害的，而 POST 会再次提交请求")])]),t._v(" "),v("li",[t._v("GET 产生的 URL 地址可以被收藏，而 POST 不可以")]),t._v(" "),v("li",[v("strong",[t._v("GET 请求会被浏览器主动缓存，而 POST 不会，除非手动设置")])]),t._v(" "),v("li",[t._v("GET 请求只能进行 URL 编码，而 POST 支持多种编码方式")]),t._v(" "),v("li",[v("strong",[t._v("GET 请求参数会被完整保留在浏览器历史记录里，而 POST 中的参数不会被保留")])]),t._v(" "),v("li",[v("strong",[t._v("GET 请求在 URL 中传送的参数是有长度限制的，大部分为 2KB，不同浏览器不一样，而 POST 没有限制")])]),t._v(" "),v("li",[t._v("对参数的数据类型，GET 只接受 ASCII 字符，而 POST 没有限制")]),t._v(" "),v("li",[t._v("GET 比 POST 更不安全，因为参数直接暴露在 URL 上，所以不能用来传递敏感信息")]),t._v(" "),v("li",[v("strong",[t._v("GET 参数通过 URL 传递，POST 放在 Request body 中")])])]),t._v(" "),v("h3",{attrs:{id:"http-状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-状态码","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 状态码")]),t._v(" "),v("p",[t._v("·")]),t._v(" "),v("ul",[v("li",[v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("状态码")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("1XX")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("HTTP 请求已接受，继续处理请求")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("2XX")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("HTTP 请求成功，已经处理完成")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("3XX")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("HTTP 请求被重定向到其他目录")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("4XX")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("客户端出现错误")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("5XX")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("服务端出现错误")])])])])]),t._v(" "),v("li",[v("p",[t._v("常见状态码")]),t._v(" "),v("ul",[v("li",[t._v("200 --- OK/请求成功，处理完毕")]),t._v(" "),v("li",[t._v("206 --- 客户端发送了一个带有 Range 头的 GET 请求，服务器完成了它")]),t._v(" "),v("li",[t._v("301 --- 请求永久重定向")]),t._v(" "),v("li",[t._v("302 --- 请求临时重定向")]),t._v(" "),v("li",[t._v("304 --- 请求被重定向到客户端本地缓存")]),t._v(" "),v("li",[t._v("400 --- 客户端存在请求语法错误")]),t._v(" "),v("li",[t._v("401 --- 客户端请求没有经过授权")]),t._v(" "),v("li",[t._v("403 --- 客户端的请求被服务器拒绝，一般为客户端没有访问权限")]),t._v(" "),v("li",[t._v("404 --- 客户端请求的 URL 在服务端不存在")]),t._v(" "),v("li",[t._v("500 --- 服务端永久错误")]),t._v(" "),v("li",[t._v("503 --- 服务端发生临时错误")])])])]),t._v(" "),v("h3",{attrs:{id:"什么是持久化连接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是持久化连接","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是持久化连接")]),t._v(" "),v("ul",[v("li",[t._v("HTTP/1.1 版本才支持持久化连接")]),t._v(" "),v("li",[t._v('HTTP 协议采用"请求-应答"模式，当使用普通模式，即非 Keep-Alive 模式时，每个请求/应答，客户和服务器都要新建一个连接，完成之后立即断开连接（HTTP 协议为无连接协议）')]),t._v(" "),v("li",[t._v("当使用 Keep-Alive 模式（又称持久连接、连接重用）时， Keep-Alive 功能使客户端到服务器端的连接持续有效，当出现对服务器的后继请求时， Keep-Alive 功能避免了建立或者重新建立连接。")])]),t._v(" "),v("h3",{attrs:{id:"什么是管线化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是管线化","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是管线化")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("在使用持久连接的情况下，某个连接上的消息传递类似于")]),t._v(" "),v("p",[t._v("请求 1 -> 响应 1 -> 请求 2 -> 响应 2 -> 请求 3 -> 响应 3")])]),t._v(" "),v("li",[v("p",[t._v("而管线化的连接，消息传递类似这样")]),t._v(" "),v("p",[t._v("请求 1 -> 请求 2 -> 请求 3 -> 响应 1 -> 响应 2 -> 响应 3")])]),t._v(" "),v("li",[v("p",[t._v("管线化机制通过持久连接完成，仅 HTTP/1.1 支持此技术")])]),t._v(" "),v("li",[v("p",[t._v("只有 GET 和 HEAD 请求可以进行管线化，而 POST 则有所限制")])]),t._v(" "),v("li",[v("p",[t._v("初次创建连接时不应启动管线机制，因为对方（服务器）不一定支持 HTTP/1.1 版本的协议")])]),t._v(" "),v("li",[v("p",[t._v("管线化不会影响响应到来的顺序，如上面的例子所示，响应返回的顺序并未改变")])]),t._v(" "),v("li",[v("p",[t._v("HTTP/1.1 要求服务器端支持管线化，但并不要求服务器端也对响应进行管线化处理，只是要求对于管线化的请求不失败即可。")])]),t._v(" "),v("li",[v("p",[t._v("由于上面提到的服务器端问题，开启管线化很可能并不会带来大部幅度的性能提升，而且很多服务器端和代理程序对管线化的支持并不好，因此现代浏览器默认并未开启管线化支持。")])])]),t._v(" "),v("h2",{attrs:{id:"原型链"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原型链","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),v("h3",{attrs:{id:"创建对象有几种方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#创建对象有几种方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建对象有几种方法")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("字面量对象")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj'")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),v("li",[v("p",[t._v("显式构造函数")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj1 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj1'")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Person")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj2 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj2'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),v("li",[v("p",[t._v("Object.create")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj3'")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj3 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),v("h3",{attrs:{id:"原型、构造函数、实力、原型链"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原型、构造函数、实力、原型链","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型、构造函数、实力、原型链")]),t._v(" "),v("h3",{attrs:{id:"instanceof-的原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-的原理","aria-hidden":"true"}},[t._v("#")]),t._v(" instanceof 的原理")]),t._v(" "),v("h3",{attrs:{id:"new-运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#new-运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" new 运算符")]),t._v(" "),v("h2",{attrs:{id:"面向对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#面向对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 面向对象")]),t._v(" "),v("h2",{attrs:{id:"通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通信","aria-hidden":"true"}},[t._v("#")]),t._v(" 通信")]),t._v(" "),v("p",[t._v("跨域")]),t._v(" "),v("h2",{attrs:{id:"安全"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安全","aria-hidden":"true"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),v("p",[t._v("XSS")]),t._v(" "),v("h2",{attrs:{id:"算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 算法")])])},[],!1,null,null,null);a.default=_.exports}}]);